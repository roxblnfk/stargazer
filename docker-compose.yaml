version: '3.5'

services:
  # elasticsearch:
  #   container_name: temporal-elasticsearch
  #   environment:
  #     - cluster.routing.allocation.disk.threshold_enabled=true
  #     - cluster.routing.allocation.disk.watermark.low=512mb
  #     - cluster.routing.allocation.disk.watermark.high=256mb
  #     - cluster.routing.allocation.disk.watermark.flood_stage=128mb
  #     - discovery.type=single-node
  #     - ES_JAVA_OPTS=-Xms256m -Xmx256m
  #     - xpack.security.enabled=false
  #   image: elasticsearch:${ELASTICSEARCH_VERSION}
  #   networks:
  #     - temporal-network
  #   expose:
  #     - 9200
  #   volumes:
  #     - /var/lib/elasticsearch/data

  postgresql:
    container_name: stargazer-temporal-postgresql
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
      POSTGRES_DB: temporal
    image: postgres:${POSTGRESQL_VERSION}
    networks:
      - temporal-network
    # expose:
    #   - 5432
    ports:
      - 5432:5432
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./docker/postgresql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  temporal:
    container_name: stargazer-temporal
    restart: on-failure
    depends_on:
      - postgresql
      # - elasticsearch
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      # - ENABLE_ES=true
      # - ES_SEEDS=elasticsearch
      # - ES_VERSION=v7
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    networks:
      - temporal-network
    ports:
      - 7233:7233
    labels:
      kompose.volume.type: configMap
    volumes:
      - ./docker/dynamicconfig:/etc/temporal/config/dynamicconfig

  # temporal-ui:
  #   container_name: stargazer-temporal-ui
  #   depends_on:
  #     - temporal
  #   environment:
  #     - TEMPORAL_ADDRESS=temporal:7233
  #     - TEMPORAL_CORS_ORIGINS=http://localhost:3000
  #   image: temporalio/ui:${TEMPORAL_UI_VERSION}
  #   networks:
  #     - temporal-network
  #   ports:
  #     - 8080:8080

  backend:
    container_name: stargazer-backend
    restart: on-failure
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    depends_on:
      - temporal
      - postgresql
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - DB_CONNECTION=pgsql
      - DB_HOST=postgresql
      - DB_PORT=5432
      # - DB_USERNAME=stargazer
      # - DB_PASSWORD=stargazer
      # - DB_DATABASE=stargazer
      - TOKENIZER_CACHE_TARGETS=true
      - APP_ENV=production
      - DEBUG=false
    networks:
      - temporal-network
    ports:
      - 8080:8080
      # - 443:443
    volumes:
      - ./:/app:rw

networks:
  temporal-network:
    driver: bridge
    name: stargazer-network

volumes:
  postgresql_data:
